{
  "openapi": "3.0.0",
  "info": {
    "description": "InterMine-Configurator prototype spec",
    "version": "0.1.0",
    "title": "InterMine Configurator API Specs - working draft",
    "contact": {
      "email": "info@intermine.org",
      "url": "http://www.intermine.org"
    },
    "license": {
      "name": "LGPL 2.1",
      "url": "https://github.com/intermine/intermine/blob/dev/LICENSE"
    }
  },
  "paths": {
    "/configurator/mine/user-config/new/": {
      "get": {
        "summary": "Get mine ID",
        "description": "return a new mine ID to use in all subsequent requests",
        "operationId": "getNewMine",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid",
                  "example": "123e4567-e89b-12d3-a456-556642440000"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "uuid",
                  "example": "123e4567-e89b-12d3-a456-556642440000"
                }
              }
            }
          }
        }
      }
    },
    "/configurator/mine/user-config": {
      "get": {
        "summary": "Get user specified config for this mine",
        "description": "return configured details (if any) for a given mine id.",
        "operationId": "getMineUserConfig",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MineUserConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MineUserConfig"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete config associated with mine instance",
        "operationId": "deleteConfig",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mine config successfully deleted"
          }
        }
      }
    },
    "/configurator/mine/build-config": {
      "get": {
        "summary": "return config needed to build a mine",
        "description": "return config needed to build a mine",
        "operationId": "getMineBuildConfig",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MineBuildConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MineBuildConfig"
                }
              }
            }
          }
        }
      }
    },
    "/configurator/file/properties/detect": {
      "post": {
        "summary": "Return information about this file",
        "description": "Reads in data file, validates and returns file attributes, plus questions (if needed) for the user.",
        "operationId": "detectFileProperties",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "3103a884-ff0b-4e77-9c4f-1354a5b928d5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully detected file type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFileProperties"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataFileProperties"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataFile"
              }
            }
          },
          "description": "File that needs to be identified.",
          "required": true
        }
      }
    },
    "/configurator/file/properties/save": {
      "post": {
        "summary": "Save file properties to a given InterMine pre-build config",
        "description": "Following on from `detectFileProperties`, we need to save a set of metadata associated with a file. This can be run multiple times, as the user may upload an unknown number of files.",
        "operationId": "saveFileProperties",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully saved provided DataFileProperties details"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFilePropertiesResponse"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataFilePropertiesResponse"
              }
            }
          },
          "description": "File that needs to be identified.",
          "required": true
        }
      }
    },
    "/configurator/mine/file-properties": {
      "get": {
        "summary": "Get config related to this file",
        "description": "return configured details (if any) for a given file",
        "operationId": "getMineFileProperties",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          },
          {
            "name": "fileId",
            "in": "query",
            "description": "ID of file",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "37c4a7bf-0faf-4400-85e0-ba7fea19330e"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFileProperties"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataFileProperties"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete config associated with file",
        "operationId": "deleteMineFileProperties",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          },
          {
            "name": "fileId",
            "in": "query",
            "description": "ID of file",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "0b658372-f679-4951-a2c9-02f1dc0d6994"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File config successfully deleted"
          }
        }
      }
    },
    "/configurator/dataTools": {
      "get": {
        "summary": "Retrieve all available tools",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataTool"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataTool"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/configurator/mine/dataTools": {
      "get": {
        "summary": "Retrieve set tools to be used for the given mine",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataTool"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataTool"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set tools to be used for the given mine",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "format": "string",
                  "example": "bluegenesToolProtvista"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "format": "string",
                  "example": "bluegenesToolProtvista"
                }
              }
            }
          },
          "description": "Tool to be used with mine",
          "required": true
        }
      }
    },
    "/configurator/supplementaryDataSources": {
      "get": {
        "summary": "Get list of possible supplementary data sources",
        "description": "Returns a list of possible external data sources to add to this mine, e.g. GO terms, publications, etc.",
        "operationId": "getSupplementaryDataSources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplementaryDataSource"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplementaryDataSource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/configurator/mine/supplementaryDataSources": {
      "get": {
        "summary": "Get list of supplementary data sources set for this mine config",
        "description": "Returns a list of external data sources to add to this mine, e.g. GO terms, publications, etc.",
        "operationId": "getMineSupplementaryDataSources",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplementaryDataSource"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplementaryDataSource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "set list of desired supplementary data sources",
        "description": "Saves a list of possible external data sources to add to this mine, e.g. GO terms, publications, etc.",
        "operationId": "setSupplementaryDataSources",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "format": "string",
                  "example": "Entrez Organism Data"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "format": "string",
                  "example": "Entrez Organism Data"
                }
              }
            }
          },
          "description": "Supplementary sources to be used with mine",
          "required": true
        }
      }
    },
    "/configurator/mine/descriptors": {
      "post": {
        "summary": "Set mine descriptors",
        "description": "Set the properties associated with this mine, e.g. name",
        "operationId": "setMineDescriptors",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Descriptors to set for Mine",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MineDescriptor"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MineDescriptor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Descriptors successfully added to mine."
          }
        }
      },
      "get": {
        "summary": "Get mine descriptors",
        "description": "return descriptors (if any) for a given mine id.",
        "operationId": "getMineDescriptors",
        "parameters": [
          {
            "name": "mineId",
            "in": "query",
            "description": "ID of mine config to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-556642440000"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of user who owns this mine",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187cd22-7709-45f0-af33-94b36b6bf561"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MineDescriptor"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MineDescriptor"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [{
    "url": "https://wizard.intermine.org/v1"
  },
    {
      "url": "http://wizard.intermine.org/v1"
    }
  ],
  "components": {
    "schemas": {
      "MineDescriptor": {
        "type": "object",
        "description": "Metadata about the file",
        "required": [
          "mineName",
          "privacy",
          "licence"
        ],
        "properties": {
          "mineName": {
            "type": "string",
            "example": "MyFirstMine"
          },
          "privacy": {
            "type": "string",
            "enum": [
              "unlisted",
              "public"
            ],
            "example": "unlisted"
          },
          "licence": {
            "type": "string",
            "example": "CC0"
          }
        },
        "xml": {
          "name": "MineDescriptor"
        }
      },
      "Organism": {
        "type": "object",
        "required": [
          "taxonID"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Homo sapiens"
          },
          "taxonID": {
            "type": "integer",
            "example": "9606"
          }
        }
      },
      "DataFileProperties": {
        "type": "object",
        "description": "All of the config input by the user via the wizard",
        "required": [
          "dataFile"
        ],
        "properties": {
          "dataFile": {
            "allOf": [{
              "$ref": "#/components/schemas/DataFile"
            }]
          },
          "descriptors": {
            "type": "array",
            "description": "Information about the file, e.g. entity count, sequence type",
            "items": {
              "$ref": "#/components/schemas/DataFileDescriptor"
            }
          },
          "filePreview": {
            "allOf": [{
              "$ref": "#/components/schemas/DataFilePreview"
            }]
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataFilePropertiesQuestion"
            }
          }
        },
        "xml": {
          "name": "DataFileProperties"
        }
      },
      "DataFile": {
        "type": "object",
        "description": "Represents the data file",
        "required": [
          "name",
          "fileId",
          "fileFormat",
          "organism"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "humanfile.gff"
          },
          "fileId": {
            "type": "string",
            "format": "uuid",
            "example": "03641b4d-bd7e-402f-803a-7aaf55c17238"
          },
          "fileFormat": {
            "type": "string",
            "enum": [
              "fasta",
              "gff3",
              "tab",
              "csv"
            ],
            "example": "fasta"
          },
          "organism": {
            "allOf": [{
              "$ref": "#/components/schemas/Organism"
            }]
          }
        },
        "xml": {
          "name": "DataFile"
        }
      },
      "DataFilePreview": {
        "type": "object",
        "properties": {
          "headerRowLabel": {
            "type": "string",
            "description": "Bold header to label the header row in the file preview",
            "example": "Header row"
          },
          "headerRow": {
            "type": "array",
            "description": "The header row of the data file",
            "items": {
              "type": "string",
              "example": [
                "seqID",
                "source",
                "type",
                "start",
                "end",
                "score",
                "strand",
                "phase"
              ]
            }
          },
          "fileRowLabel": {
            "type": "string",
            "description": "Bold header to label the file snippet in the file preview",
            "example": "Sequence"
          },
          "fileRows": {
            "type": "array",
            "description": "Zero to many rows of the data file for display",
            "items": {
              "$ref": "#/components/schemas/DataFileRow"
            }
          }
        },
        "xml": {
          "name": "DataFilePreview"
        }
      },
      "DataFileRow": {
        "type": "array",
        "description": "Array of strings representing a row in the data file",
        "items": {
          "type": "string",
          "example": [
            "NC_000001.11",
            "RefSeq",
            "region  1",
            "248956422",
            ".",
            "+",
            ".",
            "ID=id0;Dbxref=taxon:9606;Name=1;chromosome=1;gbkey=Src;genome=chromosome;mol_type=genomic DNA"
          ]
        }
      },
      "DataFileDescriptor": {
        "type": "object",
        "description": "Array of items describing the file, e.g. row count or sequence type",
        "properties": {
          "attributeName": {
            "type": "string",
            "example": "Number of entities in the file"
          },
          "attributeValue": {
            "type": "string",
            "example": "37"
          }
        }
      },
      "DataFilePropertiesQuestion": {
        "type": "object",
        "required": [
          "questionId",
          "questionHeader",
          "possibleAnswers"
        ],
        "properties": {
          "questionId": {
            "type": "string",
            "example": "nucleotideOrProtein"
          },
          "questionHeader": {
            "type": "string",
            "description": "A header in bold above question for readability",
            "example": "Sequence Type"
          },
          "questionWording": {
            "type": "string",
            "description": "The text of the question",
            "example": "Does this file contain nucleotides or proteins?"
          },
          "possibleAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataFilePropertiesAnswerOption"
            }
          }
        },
        "xml": {
          "name": "DataFilePropertiesQuestion"
        }
      },
      "DataFilePropertiesAnswerOption": {
        "type": "object",
        "required": [
          "answerId",
          "answerLabel"
        ],
        "properties": {
          "answerId": {
            "type": "string",
            "description": "Machine-readable value for this answer",
            "example": "primaryIdentifier"
          },
          "answerLabel": {
            "type": "string",
            "description": "Human readable answer to be displayed",
            "example": "Primary Identifier"
          },
          "isDefault": {
            "type": "boolean",
            "description": "TRUE if this is the default value",
            "example": "true"
          },
          "isSelected": {
            "type": "boolean",
            "description": "TRUE if the user selected this value in the wizard",
            "example": "false"
          }
        },
        "xml": {
          "name": "DataFilePropertiesAnswerOption"
        }
      },
      "DataFilePropertiesResponse": {
        "type": "object",
        "required": [
          "dataFile",
          "answers"
        ],
        "properties": {
          "dataFile": {
            "allOf": [{
              "$ref": "#/components/schemas/DataFile"
            }]
          },
          "answers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "questionId": {
                  "type": "string",
                  "example": "nucleotideOrProtein"
                },
                "answerId": {
                  "type": "string",
                  "nullable": true,
                  "example": "nucleotide"
                }
              }
            }
          }
        },
        "xml": {
          "name": "DataFilePropertiesResponse"
        }
      },
      "SupplementaryDataSource": {
        "type": "object",
        "required": [
          "label",
          "description",
          "url"
        ],
        "properties": {
          "label": {
            "type": "string",
            "example": "NCBI Taxon ID information"
          },
          "description": {
            "type": "string",
            "example": "Will populate empty fields for Organism, e.g. name (Based on NCBI taxon ID)"
          },
          "url": {
            "type": "string",
            "example": "https://intermine.readthedocs.io/en/latest/database/data-sources/library/organism/"
          }
        },
        "xml": {
          "name": "SupplementaryDataSources"
        }
      },
      "DataTool": {
        "type": "object",
        "required": [
          "toolId",
          "toolName",
          "toolDescription",
          "toolPreview",
          "requiredClasses"
        ],
        "properties": {
          "toolId": {
            "type": "string",
            "example": "@intermine/bluegenes-protvista@1.1.1"
          },
          "toolName": {
            "type": "string",
            "example": "Protein Features"
          },
          "toolDescription": {
            "type": "string",
            "example": "Protein feature browser"
          },
          "toolPreview": {
            "type": "string",
            "example": "http://toolregistry.intermine.org/protvista.png"
          },
          "requiredClasses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Gene",
              "Gene.homologues.homologue"
            ]
          }
        }
      },
      "MineUserConfig": {
        "type": "object",
        "properties": {
          "mineId": {
            "type": "string",
            "format": "uuid",
            "example": "03641b4d-bd7e-402f-803a-7aaf55c17238"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "549719c2-9b23-4e91-886d-cdb0250eeb09"
          },
          "mineDescriptor": {
            "$ref": "#/components/schemas/MineDescriptor"
          },
          "dataTools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataTool"
            }
          },
          "supplementaryDataSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplementaryDataSource"
            }
          },
          "dataFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataFileProperties"
            }
          }
        }
      },
      "MineBuildConfig": {
        "type": "object",
        "required": [
          "mineDescriptor",
          "dataTools",
          "projectXML",
          "globalAdditions"
        ],
        "properties": {
          "mineDescriptor": {
            "$ref": "#/components/schemas/MineDescriptor"
          },
          "dataTools": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "@intermine/bluegenes-protvista@1.1.1",
              "@intermine/bluegenes-cytoscape-interaction-network-viewer@1.1.0"
            ]
          },
          "projectXML": {
            "type": "string"
          },
          "globalAdditions": {
            "type": "string"
          },
          "sourceConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceConfig"
            }
          }
        }
      },
      "SourceConfig": {
        "type": "object",
        "required": [
          "fileName",
          "fileContents"
        ],
        "properties": {
          "fileName": {
            "type": "string"
          },
          "fileContents": {
            "type": "string"
          }
        }
      }
    }
  }
}