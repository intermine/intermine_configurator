/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.4).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.DataBuild;
import io.swagger.model.DataBuildStatus;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-01-22T09:44:44.307Z[GMT]")
@Api(value = "build", description = "the build API")
public interface BuildApi {

    @ApiOperation(value = "Retrieve build status of a given mine", nickname = "buildStatusGet", notes = "", response = DataBuildStatus.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = DataBuildStatus.class) })
    @RequestMapping(value = "/build/status",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<DataBuildStatus> buildStatusGet();


    @ApiOperation(value = "Begin build of specified mine", nickname = "buildTriggerPost", notes = "", response = DataBuild.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "build triggered successfully", response = DataBuild.class) })
    @RequestMapping(value = "/build/trigger",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.POST)
    ResponseEntity<DataBuild> buildTriggerPost();

}
