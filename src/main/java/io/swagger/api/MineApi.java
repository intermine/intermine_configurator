/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.4).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.DataTool;
import io.swagger.model.DataToolResponse;
import io.swagger.model.MineConfig;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-01-22T09:44:44.307Z[GMT]")
@Api(value = "mine", description = "the mine API")
public interface MineApi {

    @ApiOperation(value = "Get mine config", nickname = "getMineConfig", notes = "return configured details (if any) for a given mine id", response = MineConfig.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = MineConfig.class) })
    @RequestMapping(value = "/mine/config/{mineId}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<MineConfig> getMineConfig(@ApiParam(value = "ID of mineconfig to fetch",required=true) @PathVariable("mineId") UUID mineId);


    @ApiOperation(value = "Set tools to be used for the given mine", nickname = "mineDataToolMineIdPost", notes = "", response = DataToolResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = DataToolResponse.class) })
    @RequestMapping(value = "/mine/dataTool/{mineId}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.POST)
    ResponseEntity<DataToolResponse> mineDataToolMineIdPost(@ApiParam(value = "ID of mineconfig to set tools for",required=true) @PathVariable("mineId") Long mineId);


    @ApiOperation(value = "Retrieve set of tools suitable for the given mine", nickname = "mineDataToolsMineIdGet", notes = "", response = DataTool.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = DataTool.class, responseContainer = "List") })
    @RequestMapping(value = "/mine/dataTools/{mineId}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<DataTool>> mineDataToolsMineIdGet(@ApiParam(value = "ID of mineconfig to fetch tools for",required=true) @PathVariable("mineId") Long mineId);


    @ApiOperation(value = "Start new mine build config entry", nickname = "setMineConfig", notes = "Create a new entry for a set of uploaded files and associated configs to launch a new mine. This can allocate an id which all file uploads will be associated with.", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "New mineconfig instance created", response = String.class) })
    @RequestMapping(value = "/mine/config",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<String> setMineConfig(@ApiParam(value = "Config to set for Mine"  )  @Valid @RequestBody MineConfig body);

}
